name: Go CI/CD

permissions:
  contents: write

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest; goos: linux; ext: ""
          - os: windows-latest; goos: windows; ext: ".exe"
          - os: macos-latest; goos: darwin; ext: ""
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.23.0"
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: amd64
        run: |
          mkdir -p bin
          go build -v -ldflags "-s -w" \
            -o bin/terminalapp_${{ matrix.goos }}_amd64${{ matrix.ext }} \
            ./cmd/terminalapp/main
      - uses: actions/upload-artifact@v4
        with:
          name: terminalapp-${{ matrix.goos }}-amd64
          path: bin/terminalapp_${{ matrix.goos }}_amd64${{ matrix.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    #if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: terminalapp-linux-amd64
          path: ./bin/linux
      - uses: actions/download-artifact@v4
        with:
          name: terminalapp-windows-amd64
          path: ./bin/windows
      - uses: actions/download-artifact@v4
        with:
          name: terminalapp-darwin-amd64
          path: ./bin/macos
      - uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/linux/terminalapp_linux_amd64
          asset_name: terminalapp_linux_amd64
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/windows/terminalapp_windows_amd64.exe
          asset_name: terminalapp_windows_amd64.exe
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/macos/terminalapp_darwin_amd64
          asset_name: terminalapp_darwin_amd64
          asset_content_type: application/octet-stream
